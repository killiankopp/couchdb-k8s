# OPA Gatekeeper policies for CouchDB security
apiVersion: templates.gatekeeper.sh/v1beta1
kind: ConstraintTemplate
metadata:
  name: couchdbsecurity
  labels:
    app.kubernetes.io/name: couchdb
    app.kubernetes.io/instance: couchdb
    app.kubernetes.io/managed-by: ArgoCD
spec:
  crd:
    spec:
      names:
        kind: CouchDBSecurity
      validation:
        properties:
          runAsNonRoot:
            type: boolean
          runAsUser:
            type: integer
          fsGroup:
            type: integer
          readOnlyRootFilesystem:
            type: boolean
          allowPrivilegeEscalation:
            type: boolean
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package couchdbsecurity
        
        violation[{"msg": msg}] {
          input.review.object.metadata.namespace == "kk"
          input.review.object.kind == "Pod"
          container := input.review.object.spec.containers[_]
          container.name == "couchdb"
          not container.securityContext.runAsNonRoot
          msg := "CouchDB container must run as non-root"
        }
        
        violation[{"msg": msg}] {
          input.review.object.metadata.namespace == "kk"
          input.review.object.kind == "Pod"
          container := input.review.object.spec.containers[_]
          container.name == "couchdb"
          container.securityContext.runAsUser != 5984
          msg := "CouchDB container must run as user 5984"
        }
        
        violation[{"msg": msg}] {
          input.review.object.metadata.namespace == "kk"
          input.review.object.kind == "Pod"
          container := input.review.object.spec.containers[_]
          container.name == "couchdb"
          container.securityContext.readOnlyRootFilesystem == true
          msg := "CouchDB container cannot have read-only root filesystem"
        }
        
        violation[{"msg": msg}] {
          input.review.object.metadata.namespace == "kk"
          input.review.object.kind == "Pod"
          container := input.review.object.spec.containers[_]
          container.name == "couchdb"
          container.securityContext.allowPrivilegeEscalation
          msg := "CouchDB container must not allow privilege escalation"
        }
---
apiVersion: config.gatekeeper.sh/v1alpha1
kind: CouchDBSecurity
metadata:
  name: couchdb-security-constraint
  labels:
    app.kubernetes.io/name: couchdb
    app.kubernetes.io/instance: couchdb
    app.kubernetes.io/managed-by: ArgoCD
spec:
  match:
    - apiGroups: [""]
      kinds: ["Pod"]
      namespaces: ["kk"]
  parameters:
    runAsNonRoot: true
    runAsUser: 5984
    fsGroup: 5984
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: false
